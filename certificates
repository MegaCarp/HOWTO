# https://www.digitalocean.com/community/tutorials/how-to-set-up-and-configure-a-certificate-authority-ca-on-ubuntu-20-04

sudo apt update
sudo apt install easy-rsa
mkdir ~/easy-rsa
ln -s /usr/share/easy-rsa/* ~/easy-rsa/

#absolute path required
chmod 700 /home/stashko/easy-rsa

cd ~/easy-rsa
./easyrsa init-pki
nano vars

#this is what i use on ubuntu-home-pc
###no idea what's for "REQ_OU", what's the "community" about but it's required

# algo ec stands for:
# " [...] configuring for ECC means when a client and server attempt to establish a shared symmetric key, 
# they can use Elliptic Curve algorithms to do their exchange. Using ECC for a key exchange is significantly faster 
# than using plain Diffie-Hellman with the classic RSA algorithm since the numbers are much smaller and the computations are faster.

set_var EASYRSA_REQ_COUNTRY    "RU"
set_var EASYRSA_REQ_PROVINCE   "Moscow"
set_var EASYRSA_REQ_CITY       "Moscow"
set_var EASYRSA_REQ_ORG        "Personal"
set_var EASYRSA_REQ_EMAIL      "stashkodenis@gmail.com"
set_var EASYRSA_REQ_OU         "personal_community"
set_var EASYRSA_ALGO           "ec"
set_var EASYRSA_DIGEST         "sha512"

#file ends here


#build the certs
./easyrsa build-ca

#no password option:
# ./easyrsa build-ca nopass

## ca.crt is the open key
## ca.key is the private key

## i use ssh to distribute keys BUT 
## you can just distribute it as text:

cat ~/easy-rsa/pki/ca.crt

## paste it into e.g. telegram or w/e then save it on target 
# e.g.on linux system:

nano /tmp/ca.crt
sudo cp /tmp/ca.crt /usr/local/share/ca-certificates/
sudo update-ca-certificates

## on android i put it into docs and just clicked it and the OS imported it then

